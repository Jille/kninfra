import _import

from datetime import datetime, timedelta
from optparse import OptionParser
from cStringIO import StringIO
from iso8601 import parse_date
from cal_common import *

import gdata.calendar.service
import locale
import atom
import sys

def parse_date_range(start, end):
	""" Ugly hack to properly parse gdata date ranges """
	hack_on_end = False
	if start.find('T') == -1:
		start += 'T00:00:00.000'
	if end.find('T') == -1:
		end += 'T23:59:59.000'
		hack_on_end = True
	if hack_on_end: the_end_date = parse_date(end) - timedelta(1,0,0)
	else: the_end_date = parse_date(end)
	return (parse_date(start),
			the_end_date )

def phpstr(s):
	""" Converts <s> to a php string literal """
	if isinstance(s, str):
		# FIXME why the difference?
		s = unicode(s, 'utf8')
	ret = '"%s"' % s.encode('latin1')
	return ret

def gen_php(cal, cs, target):
	ret = StringIO()
	cal_uri = '/calendar/feeds/%s/private/full' % cal
	now = datetime.now().date()
	ret.write(("<?php\n" +
		   "// AUTOGENERATED by cal-to-php.py\n"+
		  ("//   on %s\n" % str(datetime.now())) +
		  ("//   for %s\n" % cal_uri) +
		  ("%s = array(\n" % target)))
	query = gdata.calendar.service.CalendarEventQuery(cal, 
			'private', 'full')
	query.start_min = str(now)
	feed = cs.CalendarQuery(query)
	first = True
	while True:
		for event in feed.entry:
			if first: first = False
			else: ret.write(',\n')
			if event.when[0].start_time is None:
				time = short_time = '?'
			else:
				start_time, end_time = parse_date_range(
					event.when[0].start_time,
					event.when[0].end_time)
				short_time = (start_time.strftime('%%s %b') %
						start_time.day)
				if (end_time - start_time) < timedelta(1, 0, 0):
					time = start_time.strftime('%A %d %B')
				else:
					time = "%s&mdash;%s" % (
						(start_time.strftime('%A %%s %B') %
							start_time.day),
						(end_time.strftime('%%s %B') %
							end_time.day))
			title = ('?' if event.title.text is None
					else event.title.text)
			content = ('?' if event.content.text is None
					else event.content.text)
			ret.write((
				 "array(\n"+
				("\t%s,\n" % phpstr(title)) +
				("\t%s,\n" %  phpstr(short_time)) +
				("\t%s,\n" %  phpstr(time)) +
				("\t%s,\n" % phpstr(title)) +
				("\t%s,\n" % phpstr(content)) +
				")"))
		if feed.GetNextLink() is None:
			break
		feed = cs.Query(feed.GetNextLink().href,
			converter=gdata.calendar.CalendarEventFeedFromString)
	ret.write(("\n);\n"+
		   "?>"))
	return ret.getvalue()

if __name__ == '__main__':
	try:
		# Nederlandse afkortingen voor data
		locale.setlocale(locale.LC_ALL, 'nl_NL')
	except Exception:
		pass

	parser = OptionParser()
	parser.add_option("-t", "--target-var", dest="target",
			  help="Target variable", default="$cfg['agenda']")
	(options, args) = parser.parse_args()
	cal = args[0]
	print gen_php(cal, get_cs(), options.target)
